<<<<<<< HEAD
  /**
   * Concatenates all the observable sequences.  This takes in either an array or variable arguments to concatenate.
   * @returns {Observable} An observable sequence that contains the elements of each given sequence, in sequential order.
   */
  observableProto.concat = function () {
    var items = slice.call(arguments, 0);
    items.unshift(this);
    return observableConcat.apply(this, items);
  };
=======
  /**
   * Concatenates all the observable sequences.  This takes in either an array or variable arguments to concatenate.
   * @returns {Observable} An observable sequence that contains the elements of each given sequence, in sequential order.
   */
  observableProto.concat = function () {
    var items = slice.call(arguments, 0);
    items.unshift(this);
    return observableConcat.apply(this, items);
  };
>>>>>>> b46837772cc7ab8e9f9d03fd9796a0299f04b412
